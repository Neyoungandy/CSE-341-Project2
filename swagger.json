{
    "swagger": "2.0",
    "info": {
        "title": "Project 2 API",
        "version": "1.0.0",
        "description": "API for managing users and posts with authentication"
    },
    "host": "localhost:3000",
    "schemes": ["https", "http"],

    "securityDefinitions": {
        "SessionAuth": {
            "type": "apiKey",
            "name": "Cookie",
            "in": "header",
            "description": "Session-based authentication via GitHub OAuth"
        }
    },
    "security": [{ "SessionAuth": [] }],

    "paths": {
        "/auth/github": {
            "get": {
                "summary": "Initiate GitHub OAuth login",
                "responses": {
                    "302": { "description": "Redirect to GitHub for authentication" }
                }
            }
        },
        "/auth/github/callback": {
            "get": {
                "summary": "GitHub OAuth callback",
                "responses": {
                    "200": { "description": "User authenticated successfully, session created" },
                    "400": { "description": "Authentication failed" }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "Log out user and destroy session",
                "responses": {
                    "200": { "description": "User logged out successfully" }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "Retrieve all users",
                "description": "Requires authentication via GitHub OAuth.",
                "security": [{ "SessionAuth": [] }],
                "responses": {
                    "200": { "description": "List of users" },
                    "401": { "description": "Unauthorized access, login required" }
                }
            },
            "post": {
                "summary": "Create a new user",
                "parameters": [
                    { "in": "body", "name": "user", "required": true, "schema": { "$ref": "#/definitions/User" } }
                ],
                "responses": { "201": { "description": "User created successfully" } }
            }
        },
        "/users/{id}": {
            "put": {
                "summary": "Update a user",
                "description": "Requires authentication via GitHub OAuth.",
                "security": [{ "SessionAuth": [] }],
                "parameters": [
                    { "name": "id", "in": "path", "required": true, "type": "string", "format": "uuid" },
                    { "in": "body", "name": "user", "required": true, "schema": { "$ref": "#/definitions/User" } }
                ],
                "responses": {
                    "200": { "description": "User updated successfully" },
                    "401": { "description": "Unauthorized, login required" },
                    "404": { "description": "User not found" },
                    "400": { "description": "Invalid input" }
                }
            },
            "delete": {
                "summary": "Delete a user",
                "description": "Requires authentication via GitHub OAuth.",
                "security": [{ "SessionAuth": [] }],
                "parameters": [
                    { "name": "id", "in": "path", "required": true, "type": "string", "format": "uuid" }
                ],
                "responses": {
                    "200": { "description": "User deleted successfully" },
                    "401": { "description": "Unauthorized, login required" },
                    "404": { "description": "User not found" }
                }
            }
        },
        "/posts": {
            "get": {
                "summary": "Retrieve all posts",
                "description": "Requires authentication via GitHub OAuth.",
                "security": [{ "SessionAuth": [] }],
                "responses": {
                    "200": { "description": "List of posts" },
                    "401": { "description": "Unauthorized access, login required" }
                }
            },
            "post": {
                "summary": "Create a new post",
                "security": [{ "SessionAuth": [] }],
                "parameters": [
                    { "in": "body", "name": "post", "required": true, "schema": { "$ref": "#/definitions/Post" } }
                ],
                "responses": { "201": { "description": "Post created successfully" } }
            }
        },
        "/posts/{id}": {
            "put": {
                "summary": "Update a post",
                "security": [{ "SessionAuth": [] }],
                "parameters": [
                    { "name": "id", "in": "path", "required": true, "type": "string", "format": "uuid" },
                    { "in": "body", "name": "post", "required": true, "schema": { "$ref": "#/definitions/Post" } }
                ],
                "responses": {
                    "200": { "description": "Post updated successfully" },
                    "401": { "description": "Unauthorized access, login required" },
                    "404": { "description": "Post not found" },
                    "400": { "description": "Invalid input" }
                }
            },
            "delete": {
                "summary": "Delete a post",
                "security": [{ "SessionAuth": [] }],
                "parameters": [
                    { "name": "id", "in": "path", "required": true, "type": "string", "format": "uuid" }
                ],
                "responses": {
                    "200": { "description": "Post deleted successfully" },
                    "401": { "description": "Unauthorized access, login required" },
                    "404": { "description": "Post not found" }
                }
            }
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" }
            }
        },
        "Post": {
            "type": "object",
            "properties": {
                "title": { "type": "string" },
                "content": { "type": "string" },
                "author": { "type": "string" }
            }
        }
    }
}
